name: Integration Tests

on:
  push:
    branches:
      - test-e2e-wip
  pull_request:
    branches:
      - test-e2e-wip

concurrency:
  group: integration-tests

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod

      - name: Setup LXD
        uses: canonical/setup-lxd@v0.1.1

      - name: Build GARM
        run: make build

      - name: Setup GARM
        run: sudo --preserve-env ./test/integration/scripts/setup-garm.sh
        env:
          OAUTH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
          CREDENTIALS_NAME: test-garm-creds

      - name: Setup ngrok tunnel
        run: sudo --preserve-env ./test/integration/scripts/setup-ngrok.sh
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
          NGROK_DOMAIN: incredibly-feasible-gibbon.ngrok-free.app

      - name: Run integration tests
        run: go run ./test/integration/main.go
        env:
          GARM_BASE_URL: https://incredibly-feasible-gibbon.ngrok-free.app
          GARM_USERNAME: admin
          GARM_PASSWORD: ${{ secrets.GARM_ADMIN_PASSWORD }}
          GARM_FULLNAME: "Local GARM Admin"
          GARM_EMAIL: admin@example.com
          GARM_NAME: local_garm
          CREDENTIALS_NAME: test-garm-creds
          ORG_WEBHOOK_SECRET: ${{ secrets.ORG_WEBHOOK_SECRET }}
          REPO_WEBHOOK_SECRET: ${{ secrets.REPO_WEBHOOK_SECRET }}

      - name: Show GARM logs
        if: always()
        run: |
          sudo systemctl status garm
          sudo journalctl -u garm --no-pager

      - name: Show ngrok-tunnel logs
        if: always()
        run: |
          sudo systemctl status ngrok-tunnel
          sudo journalctl -u ngrok-tunnel --no-pager

      - name: Cleanup after integration tests
        if: always()
        run: sudo --preserve-env ./test/integration/scripts/cleanup.sh
        env:
          GH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
